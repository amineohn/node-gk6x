export const KeyModifiers = {
  None: 0,
  LCtrl: 0x01,
  LShift: 0x02,
  LAlt: 0x04,
  LWin: 0x08,
  RCtrl: 0x10,
  RShift: 0x20,
  RAlt: 0x40,
  RWin: 0x80,
};

// same list, but for looking up in the other direction
export const ModifierByKeys = Object.keys(KeyModifiers).reduce((a, c, i) => {
  return { ...a, [KeyModifiers[c]]: c };
}, {});

export const KeyCodes = {
  NONE: 0x00,
  A: 0x04,
  B: 0x05,
  C: 0x06,
  D: 0x07,
  E: 0x08,
  F: 0x09,
  G: 0x0a,
  H: 0x0b,
  I: 0x0c,
  J: 0x0d,
  K: 0x0e,
  L: 0x0f,
  M: 0x10,
  N: 0x11,
  O: 0x12,
  P: 0x13,
  Q: 0x14,
  R: 0x15,
  S: 0x16,
  T: 0x17,
  U: 0x18,
  V: 0x19,
  W: 0x1a,
  X: 0x1b,
  Y: 0x1c,
  Z: 0x1d,
  1: 0x1e,
  2: 0x1f,
  3: 0x20,
  4: 0x21,
  5: 0x22,
  6: 0x23,
  7: 0x24,
  8: 0x25,
  9: 0x26,
  0: 0x27,
  RETURN: 0x28,
  ESCAPE: 0x29,
  BACKSPACE: 0x2a,
  TAB: 0x2b,
  SPACE: 0x2c,
  SUBTRACT: 0x2d,
  ADD: 0x2e,
  SQUARE_BRACKET_LEFT: 0x2f,
  SQUARE_BRACKET_RIGHT: 0x30,
  BACKSLASH: 0x31,
  EUROPE1: 0x32,
  SEMICOLON: 0x33,
  QUOTATION_SIGN: 0x34,
  WAVE: 0x35,
  COMMA: 0x36,
  FULLSTOP: 0x37,
  SLASH: 0x38,
  CAPITAL: 0x39,
  F1: 0x3a,
  F2: 0x3b,
  F3: 0x3c,
  F4: 0x3d,
  F5: 0x3e,
  F6: 0x3f,
  F7: 0x40,
  F8: 0x41,
  F9: 0x42,
  F10: 0x43,
  F11: 0x44,
  F12: 0x45,
  SNAPSHOT: 0x46,
  SCROLL: 0x47,
  CANCEL: 0x48,
  PAUSE: 0x48,
  INSERT: 0x49,
  HOME: 0x4a,
  PAGEUP: 0x4b,
  DELETE: 0x4c,
  END: 0x4d,
  PAGEDOWN: 0x4e,
  RIGHT: 0x4f,
  LEFT: 0x50,
  DOWN: 0x51,
  UP: 0x52,
  NUMLOCK: 0x53,
  NUMPAD_DIVIDE: 0x54,
  NUMPAD_MULTIPLY: 0x55,
  NUMPAD_SUBTRACT: 0x56,
  NUMPAD_ADD: 0x57,
  NUMPAD_ENTER: 0x58,
  NUMPAD1: 0x59,
  NUMPAD2: 0x5a,
  NUMPAD3: 0x5b,
  NUMPAD4: 0x5c,
  NUMPAD5: 0x5d,
  NUMPAD6: 0x5e,
  NUMPAD7: 0x5f,
  NUMPAD8: 0x60,
  NUMPAD9: 0x61,
  NUMPAD0: 0x62,
  NUMPAD_FULLSTOP: 0x63,
  QUROPE2: 0x64,
  APP: 0x65,
  KEYBOARD_POWER: 0x66,
  NUMPAD_EQUAL_SIGN: 0x67,
  F13: 0x68,
  F14: 0x69,
  F15: 0x6a,
  F16: 0x6b,
  F17: 0x6c,
  F18: 0x6d,
  F19: 0x6e,
  F20: 0x6f,
  F21: 0x70,
  F22: 0x71,
  F23: 0x72,
  F24: 0x73,
  KEYBOARD_EXECUTE: 0x74,
  KEYBOARD_HELP: 0x75,
  KEYBOARD_MENU: 0x76,
  KEYBOARD_SELECT: 0x77,
  KEYBOARD_STOP: 0x78,
  KEYBOARD_AGAIN: 0x79,
  KEYBOARD_UNDO: 0x7a,
  KEYBOARD_CUT: 0x7b,
  KEYBOARD_COPY: 0x7c,
  KEYBOARD_PASTE: 0x7d,
  KEYBOARD_FIND: 0x7e,
  KEYBOARD_MUTE: 0x7f,
  KEYBOARD_VOLUMEUP: 0x80,
  KEYBOARD_VOLUMEDOWN: 0x81,
  KEYBOARD_CAPITAL: 0x82,
  KEYBOARD_NUMLOCK: 0x83,
  KEYBOARD_SCROLL: 0x84,
  NUMPAD_COMMA: 0x85,
  KEYBOARD_QUEAL_SIGN: 0x86,
  KEYBOARD_RO: 0x87,
  KEYBOARD_KATAKANA_HIRAGANA: 0x88,
  KEYBOARD_YEN: 0x89,
  KEYBOARD_HENKAN: 0x8a,
  KEYBOARD_MUHENKAN: 0x8b,
  KEYBOARD_PC9800_COMMA: 0x8c,
  KEYBOARD_INTL7: 0x8d,
  KEYBOARD_INTL8: 0x8e,
  KEYBOARD_INTL9: 0x8f,
  KEYBOARD_LANG1: 0x90,
  KEYBOARD_LANG2: 0x91,
  KEYBOARD_LANG3: 0x92,
  KEYBOARD_LANG4: 0x93,
  KEYBOARD_LANG5: 0x94,
  KEYBOARD_LANG6: 0x95,
  KEYBOARD_LANG7: 0x96,
  KEYBOARD_LANG8: 0x97,
  KEYBOARD_LANG9: 0x98,
  KEYBOARD_ALTERNATE_ERASE: 0x99,
  KEYBOARD_SYSREQ: 0x9a,
  KEYBOARD_CANCEL: 0x9b,
  KEYBOARD_CLEAR: 0x9c,
  KEYBOARD_PRIOR: 0x9d,
  KEYBOARD_RETURN: 0x9e,
  KEYBOARD_SEPARATOR: 0x9f,
  KEYBOARD_OUT: 0xa0,
  KEYBOARD_OPER: 0xa1,
  KEYBOARD_CLEAR_AGAIN: 0xa2,
  KEYBOARD_CRSEL_PROPS: 0xa3,
  KEYBOARD_EXSEL: 0xa4,
  LCONTROL: 0xe0,
  LSHIFT: 0xe1,
  LMENU: 0xe2,
  LWIN: 0xe3,
  RCONTROL: 0xe4,
  RSHIFT: 0xe5,
  RMENU: 0xe6,
  RWIN: 0xe7,
};

// same list, but for looking up in the other direction
export const CodeByKeys = Object.keys(KeyCodes).reduce((a, c, i) => {
  return { ...a, [KeyCodes[c]]: c };
}, {});

// nicer names for keys
export const KeyNames = {
  BACKSPACE: "Backspace",
  TAB: "Tab",
  RETURN: "Enter",
  LCONTROL: "Ctrl",
  LSHIFT: "Shift",
  LMENU: "Alt",
  PAUSE: "Pause",
  CAPITAL: "Caps Lock",
  ESCAPE: "Esc",
  SPACE: "Space",
  PAGEUP: "Page Up",
  PAGEDOWN: "Page Down",
  END: "End",
  HOME: "Home",
  LEFT: "Left",
  UP: "Up",
  RIGHT: "Right",
  DOWN: "Down",
  SNAPSHOT: "Print Screen",
  INSERT: "Insert",
  DELETE: "Delete",
  0: "0",
  1: "1",
  2: "2",
  3: "3",
  4: "4",
  5: "5",
  6: "6",
  7: "7",
  8: "8",
  9: "9",
  A: "A",
  B: "B",
  C: "C",
  D: "D",
  E: "E",
  F: "F",
  G: "G",
  H: "H",
  I: "I",
  J: "J",
  K: "K",
  L: "L",
  M: "M",
  N: "N",
  O: "O",
  P: "P",
  Q: "Q",
  R: "R",
  S: "S",
  T: "T",
  U: "U",
  V: "V",
  W: "W",
  X: "X",
  Y: "Y",
  Z: "Z",
  LWIN: "Left Win",
  RWIN: "Right Win",
  NUMPAD0: "Num 0",
  NUMPAD1: "Num 1",
  NUMPAD2: "Num 2",
  NUMPAD3: "Num 3",
  NUMPAD4: "Num 4",
  NUMPAD5: "Num 5",
  NUMPAD6: "Num 6",
  NUMPAD7: "Num 7",
  NUMPAD8: "Num 8",
  NUMPAD9: "Num 9",
  NUMPAD_MULTIPLY: "Num *",
  NUMPAD_ADD: "Num +",
  NUMPAD_SUBTRACT: "Num -",
  NUMPAD_FULLSTOP: "Num .",
  NUMPAD_DIVIDE: "Num /",
  F1: "F1",
  F2: "F2",
  F3: "F3",
  F4: "F4",
  F5: "F5",
  F6: "F6",
  F7: "F7",
  F8: "F8",
  F9: "F9",
  F10: "F10",
  F11: "F11",
  F12: "F12",
  NUMLOCK: "Num Lock",
  SCROLL: "Scroll Lock",
  RSHIFT: "Right Shift",
  RCONTROL: "Right Ctrl",
  RMENU: "Right Alt",
  SEMICOLON: ";",
  ADD: "=",
  COMMA: ",",
  SUBTRACT: "-",
  FULLSTOP: ".",
  SLASH: "/",
  WAVE: "`",
  SQUARE_BRACKET_LEFT: "[",
  BACKSLASH: "\\",
  SQUARE_BRACKET_RIGHT: "]",
  QUOTATION_SIGN: "'",
};
